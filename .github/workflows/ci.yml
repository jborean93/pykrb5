name: Test pykrb5
on:
  push:
    branches:
    - main
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

  pull_request:
    branches:
    - main
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

  release:
    types:
    - published

jobs:
  build_sdist:
    name: build sdist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: build sdist
      run: |
        python -m pip install build
        python -m build --sdist
      env:
        KRB5_SKIP_EXTENSIONS: true

    - uses: actions/upload-artifact@v4
      with:
        name: artifact-sdist
        path: ./dist/*.tar.gz

  build_wheels:
    name: build wheels
    needs:
    - build_sdist

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
       include:
       - os: macOS-13
         version: cp313-macosx_x86_64
       - os: macOS-15
         version: cp313-macosx_arm64
       - os: macOS-13
         version: cp312-macosx_x86_64
       - os: macOS-15
         version: cp312-macosx_arm64
       - os: macOS-13
         version: cp311-macosx_x86_64
       - os: macOS-15
         version: cp311-macosx_arm64
       - os: macOS-13
         version: cp310-macosx_x86_64
       - os: macOS-15
         version: cp310-macosx_arm64
       - os: macOS-13
         version: cp39-macosx_x86_64
       - os: macOS-15
         version: cp39-macosx_arm64
       - os: macOS-13
         version: cp38-macosx_x86_64
       - os: macOS-15
         version: cp38-macosx_arm64

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: artifact-sdist
        path: ./

    - name: extract sdist
      run: |
        tar xf krb5-*.tar.gz
        mv krb5-*/* .
        rm -r krb5-*/
        rm krb5-*.tar.gz

    - name: build wheel
      uses: pypa/cibuildwheel@v2.23.0
      env:
        CIBW_BUILD: ${{ matrix.version }}
        CIBW_BUILD_VERBOSITY: 1

    - uses: actions/upload-artifact@v4
      with:
        path: ./wheelhouse/*.whl
        name: artifact-wheel-${{ matrix.version }}

  build_cython_0_29:
    name: build cython 0.29.x
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: build cython 0.29
      run: |
        sudo /bin/bash -c 'source ./build_helpers/lib.sh; lib::setup::system_requirements'

        python -m pip install build
        echo 'Cython<3.0.0' > constraints.txt
        PIP_CONSTRAINT=constraints.txt python -m build \
            --sdist \
            --wheel \
            --installer pip \
            --verbose

  test:
    name: test
    needs:
    - build_sdist
    - build_cython_0_29
    - build_wheels

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macOS-latest
        python-version:
        - 3.8
        - 3.9
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'
        provider:
        - mit
        - heimdal

        exclude:
        - os: macOS-latest
          provider: mit

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/download-artifact@v4
      with:
        pattern: artifact-*
        merge-multiple: true
        path: ./dist

    - name: Test
      run: sudo -E build_helpers/run-ci.sh
      env:
        KRB5_PROVIDER: ${{ matrix.provider }}
        PYTEST_ADDOPTS: --color=yes

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Unit Test Results (${{ matrix.os }} ${{ matrix.provider }} ${{ matrix.python-version }})
        path: ./junit/test-results.xml

  publish:
    name: publish
    needs:
    - test
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: artifact-*
        merge-multiple: true
        path: ./dist

    - name: Publish
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
